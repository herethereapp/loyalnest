```mermaid
graph TD
    %% Main Sections
    A[Customer] -->|Interacts with| B[Customer Widget]
    C[Merchant] -->|Manages via| D[Merchant Dashboard]
    E[Admin] -->|Manages via| F[Admin Module]
    G[Backend] -->|Supports| B[Customer Widget]
    G[Backend] -->|Supports| D[Merchant Dashboard]
    G[Backend] -->|Supports| F[Admin Module]
    H[Integrations] -->|Connects to| G[Backend]
    I[Database: PostgreSQL] -->|Stores/Retrieves| G[Backend]
    J[Cache: Redis] -->|Optimizes| G[Backend]
    K[Queue: Bull] -->|Handles Async| G[Backend]
    L[Analytics: PostHog] -->|Tracks Events| G[Backend]

    %% Customer Widget (Phase 1, 2, 3)
    subgraph Customer Widget
        B[Customer Widget] --> B0[App Bridge Auth]
        B[Customer Widget] --> B1[Points Balance]
        B[Customer Widget] --> B2[Redemption]
        B[Customer Widget] --> B3[Referral Popup]
        B[Customer Widget] --> B4[RFM Nudges]
        B[Customer Widget] --> B5[VIP Tiers]
        B[Customer Widget] --> B6[Gamification]
        B[Customer Widget] --> B7[Multilingual Support]
        B[Customer Widget] --> B8[Referral Status]
        B[Customer Widget] --> B9[GDPR Requests]
        B[Customer Widget] --> B10[Progressive Tier Engagement]
        B[Customer Widget] --> B11[Mobile Wallet]
        B2[Redemption] --> B2a[Discounts]
        B2[Redemption] --> B2b[Free Shipping]
        B2[Redemption] --> B2c[Free Products]
        B2[Redemption] --> B2d[Coupons]
        B3[Referral Popup] --> B3a[SMS/Email Referral]
        B3[Referral Popup] --> B3b[Social Sharing]
        B4[RFM Nudges] --> B4a[Banner/Popup]
        B4[RFM Nudges] --> B4b[Dismiss Action]
        B5[VIP Tiers] --> B5a[Tier Status]
        B5[VIP Tiers] --> B5b[Perks Display]
        B6[Gamification] --> B6a[Badges]
        B6[Gamification] --> B6b[Leaderboards]
        B7[Multilingual Support] --> B7a[Language Selector]
        B7[Multilingual Support] --> B7b[JSONB Content: i18next]
        B8[Referral Status] --> B8a[Pending/Completed]
        B8[Referral Status] --> B8b[Friend Actions: Signup/Purchase]
        B9[GDPR Requests] --> B9a[Data Access]
        B9[GDPR Requests] --> B9b[Data Deletion]
        B9[GDPR Requests] --> B9c[GDPR Form UI]
        B10[Progressive Tier Engagement] --> B10a[ProgressBar]
        B10[Progressive Tier Engagement] --> B10b[Recommended Actions]
        B11[Mobile Wallet] --> B11a[Apple Wallet]
        B11[Mobile Wallet] --> B11b[Google Pay]
        B11[Mobile Wallet] --> B11c[QR Code]
    end

    %% Merchant Dashboard (Phase 1, 2, 3)
    subgraph Merchant Dashboard
        D[Merchant Dashboard] --> D0[App Bridge Auth]
        D[Merchant Dashboard] --> D1[Welcome Page]
        D[Merchant Dashboard] --> D2[Points Program]
        D[Merchant Dashboard] --> D3[Referrals Program]
        D[Merchant Dashboard] --> D4[Customers]
        D[Merchant Dashboard] --> D5[Analytics]
        D[Merchant Dashboard] --> D6[Settings]
        D[Merchant Dashboard] --> D7[On-Site Content]
        D[Merchant Dashboard] --> D8[VIP Tiers]
        D[Merchant Dashboard] --> D9[Activity Logs]
        D[Merchant Dashboard] --> D10[Bonus Campaigns]
        D[Merchant Dashboard] --> D11[Notification Templates]
        D[Merchant Dashboard] --> D12[RFM Segment Preview]
        D[Merchant Dashboard] --> D13[Customer Import]
        D[Merchant Dashboard] --> D14[Lifecycle Rewards]
        D[Merchant Dashboard] --> D15[Segment Benchmarking]
        D[Merchant Dashboard] --> D16[A/B Test Nudges]
        D[Merchant Dashboard] --> D17[Churn Risk Customers]
        D1[Welcome Page] --> D1a[Setup Tasks]
        D1[Welcome Page] --> D1b[Congratulatory Messages]
        D2[Points Program] --> D2a[Earn: Purchases, Signups]
        D2[Points Program] --> D2b[Redeem: Discounts, Shipping]
        D2[Points Program] --> D2c[Branding: Rewards Panel]
        D2[Points Program] --> D2d[Status: Enable/Disable]
        D3[Referrals Program] --> D3a[SMS/Email Config]
        D3[Referrals Program] --> D3b[Social Sharing Config]
        D3[Referrals Program] --> D3c[Status Toggle]
        D4[Customers] --> D4a[List: Name, Email, Points]
        D4[Customers] --> D4b[Search: Name/Email]
        D5[Analytics] --> D5a[Metrics: Members, Points]
        D5[Analytics] --> D5b[RFM Chart]
        D5[Analytics] --> D5c[Advanced Reports]
        D5[Analytics] --> D5d[CSV Export]
        D6[Settings] --> D6a[Store Details, Billing]
        D6[Settings] --> D6b[Branding]
        D6[Settings] --> D6c[RFM Config]
        D6[Settings] --> D6d[Developer Toolkit]
        D6[Settings] --> D6e[Language Config]
        D7[On-Site Content] --> D7a[Loyalty Page]
        D7[On-Site Content] --> D7b[Rewards Panel]
        D7[On-Site Content] --> D7c[Launcher Button]
        D7[On-Site Content] --> D7d[Points Display]
        D7[On-Site Content] --> D7e[Post-Purchase Widget]
        D7[On-Site Content] --> D7f[Checkout Extensions]
        D7[On-Site Content] --> D7g[Sticky Bar]
        D8[VIP Tiers] --> D8a[Thresholds: Spending]
        D8[VIP Tiers] --> D8b[Perks: Early Access]
        D9[Activity Logs] --> D9a[Points, Referrals, VIP]
        D10[Bonus Campaigns] --> D10a[Promotions]
        D10[Bonus Campaigns] --> D10b[Goal Spend]
        D10[Bonus Campaigns] --> D10c[Campaign Discounts]
        D11[Notification Templates] --> D11a[Points, Referrals]
        D11[Notification Templates] --> D11b[Template Editor UI]
        D12[RFM Segment Preview] --> D12a[Chart.js Segments]
        D13[Customer Import] --> D13a[CSV Upload UI]
        D14[Lifecycle Rewards] --> D14a[RFM/Tier Triggers]
        D14[Lifecycle Rewards] --> D14b[Shopify Flow Templates]
        D15[Segment Benchmarking] --> D15a[Industry Comparisons]
        D15[Segment Benchmarking] --> D15b[Chart.js Visualization]
        D16[A/B Test Nudges] --> D16a[Variant Config]
        D16[A/B Test Nudges] --> D16b[Results Chart]
        D17[Churn Risk Customers] --> D17a[At-Risk List]
        D17[Churn Risk Customers] --> D17b[xAI Prediction]
    end

    %% Admin Module (Phase 1, 2, 3)
    subgraph Admin Module
        F[Admin Module] --> F0[RBAC Auth]
        F[Admin Module] --> F1[Overview]
        F[Admin Module] --> F2[Merchants]
        F[Admin Module] --> F3[Admin Users]
        F[Admin Module] --> F4[Logs]
        F[Admin Module] --> F5[Plan Management]
        F[Admin Module] --> F6[Integration Health]
        F[Admin Module] --> F7[RFM Config Management]
        F[Admin Module] --> F8[RFM Segment Export]
        F[Admin Module] --> F9[GDPR Requests]
        F[Admin Module] --> F10[Rate Limit Monitoring]
        F[Admin Module] --> F11[Multi-Tenant Accounts]
        F[Admin Module] --> F12[Action Replay]
        F[Admin Module] --> F13[RFM Simulation]
        F1[Overview] --> F1a[Merchant Count, Points]
        F2[Merchants] --> F2a[List: ID, Domain, Plan]
        F2[Merchants] --> F2b[Adjust Points]
        F2[Merchants] --> F2c[Suspend/Reactivate]
        F3[Admin Users] --> F3a[Add/Edit/Delete Admins]
        F4[Logs] --> F4a[API Logs, Audit Logs]
        F9[GDPR Requests] --> F9a[Data Request]
        F9[GDPR Requests] --> F9b[Data Redaction]
        F9[GDPR Requests] --> F9c[GDPR Request Dashboard UI]
        F10[Rate Limit Monitoring] --> F10a[429 Violations]
        F10[Rate Limit Monitoring] --> F10b[Rate Limit Dashboard UI]
        F11[Multi-Tenant Accounts] --> F11a[Store Linking]
        F11[Multi-Tenant Accounts] --> F11b[Scoped RBAC]
        F12[Action Replay] --> F12a[Customer Journey Replay]
        F12[Action Replay] --> F12b[Undo Bulk Actions]
        F13[RFM Simulation] --> F13a[Mock Order Events]
        F13[RFM Simulation] --> F13b[Segment Transition Chart]
    end

    %% Integrations (Phase 1, 2, 3)
    subgraph Integrations
        H[Integrations] --> H1[Shopify]
        H[Integrations] --> H2[Klaviyo]
        H[Integrations] --> H3[Twilio]
        H[Integrations] --> H4[Postscript]
        H[Integrations] --> H5[Mailchimp]
        H[Integrations] --> H6[Yotpo]
        H[Integrations] --> H7[Square]
        H[Integrations] --> H8[Lightspeed]
        H[Integrations] --> H9[Gorgias]
        H[Integrations] --> H10[Shopify Flow]
        H[Integrations] --> H11[Apple Wallet]
        H[Integrations] --> H12[Google Pay]
        H[Integrations] --> H13[xAI API]
        H1[Shopify] --> H1a[OAuth]
        H1[Shopify] --> H1b[Orders/Create Webhook]
        H1[Shopify] --> H1c[Orders/Cancelled Webhook]
        H1[Shopify] --> H1d[GDPR Webhooks]
        H1[Shopify] --> H1e[POS Points]
        H1d[GDPR Webhooks] --> H1d1[customers/data_request]
        H1d[GDPR Webhooks] --> H1d2[customers/redact]
        H2[Klaviyo] --> H2a[Email Notifications]
        H3[Twilio] --> H3a[SMS Notifications]
        H4[Postscript] --> H4a[SMS/Email Notifications]
        H7[Square] --> H7a[Payment Integration]
        H10[Shopify Flow] --> H10a[Lifecycle Triggers]
        H10[Shopify Flow] --> H10b[Churn Risk Actions]
        H11[Apple Wallet] --> H11a[Pass Generation]
        H12[Google Pay] --> H12a[Pass Generation]
        H13[xAI API] --> H13a[Churn Prediction]
        H13[xAI API] --> H13b[RFM Simulation]
    end

    %% Database (Phase 1, 2, 3)
    subgraph Database: PostgreSQL
        I[Database] --> I1[merchants]
        I[Database] --> I2[customers]
        I[Database] --> I3[points_transactions]
        I[Database] --> I4[referrals]
        I[Database] --> I5[rewards]
        I[Database] --> I6[reward_redemptions]
        I[Database] --> I7[program_settings]
        I[Database] --> I8[shopify_sessions]
        I[Database] --> I9[customer_segments]
        I[Database] --> I10[admin_users]
        I[Database] --> I11[api_logs]
        I[Database] --> I12[audit_logs]
        I[Database] --> I13[vip_tiers]
        I[Database] --> I14[email_templates]
        I[Database] --> I15[email_events]
        I[Database] --> I16[integrations]
        I[Database] --> I17[bonus_campaigns]
        I[Database] --> I18[gamification_achievements]
        I[Database] --> I19[nudges]
        I[Database] --> I20[nudge_events]
        I[Database] --> I21[gdpr_requests]
        I[Database] --> I22[import_logs]
        I[Database] --> I23[referral_links]
        I[Database] --> I24[rfm_segment_counts]
        I[Database] --> I25[referral_events]
        I[Database] --> I26[wallet_passes]
        I[Database] --> I27[rfm_benchmarks]
        I1[merchants] --> I1a[Encrypted api_token]
        I2[customers] --> I2a[Encrypted email]
        I2[customers] --> I2b[RFM Score: JSONB]
        I3[points_transactions] --> I3a[Partitioned]
        I4[referrals] --> I4a[Partitioned]
        I4[referrals] --> I4b[referral_link_id]
        I6[reward_redemptions] --> I6a[Partitioned]
        I6[reward_redemptions] --> I6b[campaign_id]
        I10[admin_users] --> I10a[Encrypted metadata]
        I11[api_logs] --> I11a[Partitioned]
        I15[email_events] --> I15a[Partitioned]
        I17[bonus_campaigns] --> I17a[Partitioned]
        I21[gdpr_requests] --> I21a[90-Day Retention]
        I24[rfm_segment_counts] --> I24a[Materialized View]
        I25[referral_events] --> I25a[Partitioned]
        I26[wallet_passes] --> I26a[Encrypted pass_data]
        I27[rfm_benchmarks] --> I27a[Anonymized Data]
    end

    %% Backend (Phase 1, 2, 3)
    subgraph Backend
        G[Backend] --> G1[Points Service: Dockerized]
        G[Backend] --> G2[Referrals Service: Dockerized]
        G[Backend] --> G3[Analytics Service: Dockerized]
        G[Backend] --> G4[Admin Service: Dockerized]
        G[Backend] --> G5[Auth Service: Dockerized]
        G[Backend] --> G6[Frontend Service: Dockerized]
        G[Backend] --> G7[Rust/Wasm Shopify Functions]
        G1[Points Service: Dockerized] --> G1a[/points.v1/EarnPoints]
        G1[Points Service: Dockerized] --> G1b[/points.v1/RedeemReward]
        G1[Points Service: Dockerized] --> G1c[/points.v1/AdjustPoints]
        G1[Points Service: Dockerized] --> G1d[/points.v1/CreateCampaign]
        G1[Points Service: Dockerized] --> G1e[/points.v1/GetPointsBalance]
        G1[Points Service: Dockerized] --> G1f[/points.v1/GetVipTierStatus]
        G1[Points Service: Dockerized] --> G1g[/points.v1/GetVipTierProgress]
        G1[Points Service: Dockerized] --> G1h[/points.v1/GenerateWalletPass]
        G2[Referrals Service: Dockerized] --> G2a[/referrals.v1/CreateReferral]
        G2[Referrals Service: Dockerized] --> G2b[/referrals.v1/CompleteReferral]
        G2[Referrals Service: Dockerized] --> G2c[/referrals.v1/SendReferralNotification]
        G2[Referrals Service: Dockerized] --> G2d[/referrals.v1/GetReferralStatus]
        G2[Referrals Service: Dockerized] --> G2e[/referrals.v1/UpdateReferralConfig]
        G3[Analytics Service: Dockerized] --> G3a[/analytics.v1/GetAnalytics]
        G3[Analytics Service: Dockerized] --> G3b[/analytics.v1/UpdateRFMScores]
        G3[Analytics Service: Dockerized] --> G3c[/analytics.v1/GetNudges]
        G3[Analytics Service: Dockerized] --> G3d[/analytics.v1/GetLeaderboard]
        G3[Analytics Service: Dockerized] --> G3e[/analytics.v1/ExportAnalytics]
        G3[Analytics Service: Dockerized] --> G3f[/analytics.v1/PreviewRFMSegments]
        G3[Analytics Service: Dockerized] --> G3g[/analytics.v1/GetSegmentBenchmarks]
        G3[Analytics Service: Dockerized] --> G3h[/analytics.v1/ConfigureNudgeABTest]
        G3[Analytics Service: Dockerized] --> G3i[/analytics.v1/GetChurnRisk]
        G3[Analytics Service: Dockerized] --> G3j[/analytics.v1/SimulateRFMSegments]
        G4[Admin Service: Dockerized] --> G4a[/admin.v1/CompleteSetupTask]
        G4[Admin Service: Dockerized] --> G4b[/admin.v1/UpdatePointsProgram]
        G4[Admin Service: Dockerized] --> G4c[/admin.v1/AdjustPoints]
        G4[Admin Service: Dockerized] --> G4d[/admin.v1/GetLogs]
        G4[Admin Service: Dockerized] --> G4e[/admin.v1/ProcessGDPRRequest]
        G4[Admin Service: Dockerized] --> G4f[/admin.v1/GetRateLimits]
        G4[Admin Service: Dockerized] --> G4g[/admin.v1/UpdateStoreSettings]
        G4[Admin Service: Dockerized] --> G4h[/admin.v1/UpdateRFMConfig]
        G4[Admin Service: Dockerized] --> G4i[/admin.v1/UpdateMerchantStatus]
        G4[Admin Service: Dockerized] --> G4j[/admin.v1/ImportCustomers]
        G4[Admin Service: Dockerized] --> G4k[/admin.v1/GetCustomerJourney]
        G4[Admin Service: Dockerized] --> G4l[/admin.v1/UpdateMultiTenantConfig]
        G5[Auth Service: Dockerized] --> G5a[/auth.v1/ListAdminUsers]
        G5[Auth Service: Dockerized] --> G5b[/auth.v1/UpdateMultiTenantConfig]
        G6[Frontend Service: Dockerized] --> G6a[/frontend.v1/UpdateContent]
        G6[Frontend Service: Dockerized] --> G6b[/frontend.v1/GetWidgetConfig]
        G6[Frontend Service: Dockerized] --> G6c[/frontend.v1/UpdateCheckoutConfig]
        G7[Rust/Wasm Shopify Functions] --> G7a[Discounts]
        G7[Rust/Wasm Shopify Functions] --> G7b[RFM Updates]
        G7[Rust/Wasm Shopify Functions] --> G7c[VIP Multipliers]
        G7[Rust/Wasm Shopify Functions] --> G7d[Campaign Discounts]
        G[Backend] --> G8[Error Handling]
        G8[Error Handling] --> G8a[400: Invalid Input]
        G8[Error Handling] --> G8b[401: Unauthorized]
        G8[Error Handling] --> G8c[429: Rate Limit]
        G8[Error Handling] --> G8d[Exponential Backoff]
        G8[Error Handling] --> G8e[Circuit Breakers]
    end

    %% Data Flow
    A[Customer] -->|Earns/Redeems| I3[points_transactions]
    A[Customer] -->|Refers| I4[referrals]
    A[Customer] -->|Views| I23[referral_links]
    A[Customer] -->|Triggers| I20[nudge_events]
    A[Customer] -->|Views| I13[vip_tiers]
    A[Customer] -->|Earns| I18[gamification_achievements]
    A[Customer] -->|Submits| I21[gdpr_requests]
    A[Customer] -->|Views| I24[rfm_segment_counts]
    A[Customer] -->|Triggers| I25[referral_events]
    A[Customer] -->|Saves| I26[wallet_passes]
    B[Customer Widget] -->|Fetches/Saves| J[Cache: Redis]
    B[Customer Widget] -->|Authenticates| H1a[OAuth]
    B[Customer Widget] -->|Sets| J1[localStorage: Language]
    B0[App Bridge Auth] -->|Secures| G1[Points Service: Dockerized]
    B0[App Bridge Auth] -->|Secures| G2[Referrals Service: Dockerized]
    B0[App Bridge Auth] -->|Secures| G3[Analytics Service: Dockerized]
    B0[App Bridge Auth] -->|Secures| G6[Frontend Service: Dockerized]
    B8[Referral Status] -->|Queries| I4[referrals]
    B8[Referral Status] -->|Queries| I23[referral_links]
    B8[Referral Status] -->|Queries| I25[referral_events]
    B8[Referral Status] -->|Calls| G2d[/referrals.v1/GetReferralStatus]
    B9[GDPR Requests] -->|Submits| G4e[/admin.v1/ProcessGDPRRequest]
    B10[Progressive Tier Engagement] -->|Queries| I13[vip_tiers]
    B10[Progressive Tier Engagement] -->|Queries| I7[program_settings]
    B10[Progressive Tier Engagement] -->|Calls| G1g[/points.v1/GetVipTierProgress]
    B11[Mobile Wallet] -->|Saves| I26[wallet_passes]
    B11[Mobile Wallet] -->|Calls| G1h[/points.v1/GenerateWalletPass]
    B11[Mobile Wallet] -->|Integrates| H11a[Apple Wallet: Pass Generation]
    B11[Mobile Wallet] -->|Integrates| H12a[Google Pay: Pass Generation]
    D[Merchant Dashboard] -->|Configures| I7[program_settings]
    D[Merchant Dashboard] -->|Configures| I14[email_templates]
    D[Merchant Dashboard] -->|Views| I9[customer_segments]
    D[Merchant Dashboard] -->|Views| I24[rfm_segment_counts]
    D[Merchant Dashboard] -->|Views| I27[rfm_benchmarks]
    D[Merchant Dashboard] -->|Authenticates| H1a[OAuth]
    D0[App Bridge Auth] -->|Secures| G1[Points Service: Dockerized]
    D0[App Bridge Auth] -->|Secures| G2[Referrals Service: Dockerized]
    D0[App Bridge Auth] -->|Secures| G3[Analytics Service: Dockerized]
    D0[App Bridge Auth] -->|Secures| G4[Admin Service: Dockerized]
    D0[App Bridge Auth] -->|Secures| G6[Frontend Service: Dockerized]
    D11[Notification Templates] -->|Saves| G6a[/frontend.v1/UpdateContent]
    D12[RFM Segment Preview] -->|Queries| I24[rfm_segment_counts]
    D12[RFM Segment Preview] -->|Queries| G3f[/analytics.v1/PreviewRFMSegments]
    D13[Customer Import] -->|Uploads| G4j[/admin.v1/ImportCustomers]
    D14[Lifecycle Rewards] -->|Configures| I17[bonus_campaigns]
    D14[Lifecycle Rewards] -->|Calls| H10a[Shopify Flow: Lifecycle Triggers]
    D14[Lifecycle Rewards] -->|Calls| G1d[/points.v1/CreateCampaign]
    D15[Segment Benchmarking] -->|Queries| I27[rfm_benchmarks]
    D15[Segment Benchmarking] -->|Calls| G3g[/analytics.v1/GetSegmentBenchmarks]
    D16[A/B Test Nudges] -->|Configures| I7[program_settings]
    D16[A/B Test Nudges] -->|Tracks| I20[nudge_events]
    D16[A/B Test Nudges] -->|Calls| G3h[/analytics.v1/ConfigureNudgeABTest]
    D17[Churn Risk Customers] -->|Queries| I24[rfm_segment_counts]
    D17[Churn Risk Customers] -->|Calls| G3i[/analytics.v1/GetChurnRisk]
    D17[Churn Risk Customers] -->|Integrates| H13a[xAI API: Churn Prediction]
    D17[Churn Risk Customers] -->|Calls| H10b[Shopify Flow: Churn Risk Actions]
    F[Admin Module] -->|Manages| I1[merchants]
    F[Admin Module] -->|Manages| I10[admin_users]
    F[Admin Module] -->|Views| I11[api_logs]
    F[Admin Module] -->|Views| I12[audit_logs]
    F[Admin Module] -->|Processes| I21[gdpr_requests]
    F[Admin Module] -->|Monitors| I11a[Partitioned: 429]
    F0[RBAC Auth] -->|Secures| G4[Admin Service: Dockerized]
    F0[RBAC Auth] -->|Secures| G5[Auth Service: Dockerized]
    F9[GDPR Requests] -->|Queries| G4e[/admin.v1/ProcessGDPRRequest]
    F10[Rate Limit Monitoring] -->|Queries| G4f[/admin.v1/GetRateLimits]
    F11[Multi-Tenant Accounts] -->|Manages| I1[merchants]
    F11[Multi-Tenant Accounts] -->|Manages| I10[admin_users]
    F11[Multi-Tenant Accounts] -->|Calls| G4l[/admin.v1/UpdateMultiTenantConfig]
    F11[Multi-Tenant Accounts] -->|Calls| G5b[/auth.v1/UpdateMultiTenantConfig]
    F12[Action Replay] -->|Queries| I12[audit_logs]
    F12[Action Replay] -->|Queries| I3[points_transactions]
    F12[Action Replay] -->|Queries| I6[reward_redemptions]
    F12[Action Replay] -->|Calls| G4k[/admin.v1/GetCustomerJourney]
    F13[RFM Simulation] -->|Queries| I24[rfm_segment_counts]
    F13[RFM Simulation] -->|Calls| G3j[/analytics.v1/SimulateRFMSegments]
    F13[RFM Simulation] -->|Integrates| H13b[xAI API: RFM Simulation]
    H[Integrations] -->|Sends Data| G[Backend]
    H1[Shopify] -->|Triggers| G1[Points Service: Dockerized]
    H1[Shopify] -->|Triggers| G2[Referrals Service: Dockerized]
    H2[Klaviyo] -->|Receives| G2c[/referrals.v1/SendReferralNotification]
    H2[Klaviyo] -->|Receives| G4e[/admin.v1/ProcessGDPRRequest]
    H2[Klaviyo] -->|Receives| G6a[/frontend.v1/UpdateContent]
    H3[Twilio] -->|Receives| G2c[/referrals.v1/SendReferralNotification]
    H4[Postscript] -->|Receives| G2c[/referrals.v1/SendReferralNotification]
    H7[Square] -->|Integrates| G4[Admin Service: Dockerized]
    H10[Shopify Flow] -->|Triggers| G1[Points Service: Dockerized]
    H10[Shopify Flow] -->|Triggers| G3[Analytics Service: Dockerized]
    I2[customers] -->|Stores RFM| I9[customer_segments]
    I2[customers] -->|Stores RFM| I24[rfm_segment_counts]
    I13[vip_tiers] -->|Stores VIP Data| I2[customers]
    I7[program_settings] -->|Stores RFM Thresholds| D6c[RFM Config]
    I7[program_settings] -->|Stores Language| D6e[Language Config]
    I14[email_templates] -->|Provides| B7b[JSONB Content: i18next]
    I14[email_templates] -->|Provides| D11a[Points, Referrals]
    I6[reward_redemptions] -->|Stores| G7d[Campaign Discounts]
    J[Cache: Redis] -->|Caches| J2[points:{customer_id}]
    J[Cache: Redis] -->|Caches| J3[referral:{referral_code}]
    J[Cache: Redis] -->|Caches| J4[nudge:{customer_id}]
    J[Cache: Redis] -->|Caches| J5[tier:{customer_id}]
    J[Cache: Redis] -->|Caches| J6[leaderboard:{merchant_id}:sorted_set]
    J[Cache: Redis] -->|Caches| J7[import:{merchant_id}]
    J[Cache: Redis] -->|Caches| J8[campaign:{campaign_id}]
    J[Cache: Redis] -->|Caches| J9[rfm:preview:{merchant_id}:stream]
    J[Cache: Redis] -->|Caches| J10[rate_limit:{merchant_id}]
    J[Cache: Redis] -->|Caches| J11[referral_status:{customer_id}]
    J[Cache: Redis] -->|Caches| J12[analytics:{merchant_id}]
    J[Cache: Redis] -->|Caches| J13[content:{merchant_id}:{locale}]
    J[Cache: Redis] -->|Caches| J14[tier_progress:{customer_id}]
    J[Cache: Redis] -->|Caches| J15[wallet:{customer_id}]
    J[Cache: Redis] -->|Caches| J16[benchmarks:{merchant_id}]
    J[Cache: Redis] -->|Caches| J17[nudge_ab:{merchant_id}]
    J[Cache: Redis] -->|Caches| J18[churn_risk:{merchant_id}]
    J[Cache: Redis] -->|Caches| J19[multi_tenant:group:{group_id}]
    J[Cache: Redis] -->|Caches| J20[journey:{customer_id}]
    J[Cache: Redis] -->|Caches| J21[rfm_simulation:{merchant_id}]
    K[Queue: Bull] -->|Processes| H2a[Email Notifications]
    K[Queue: Bull] -->|Processes| H3a[SMS Notifications]
    K[Queue: Bull] -->|Processes| H4a[SMS/Email Notifications]
    K[Queue: Bull] -->|Processes| H11a[Apple Wallet: Pass Generation]
    K[Queue: Bull] -->|Processes| H12a[Google Pay: Pass Generation]
    G1[Points Service: Dockerized] -->|Queries| I[Database: PostgreSQL]
    G2[Referrals Service: Dockerized] -->|Queries| I[Database: PostgreSQL]
    G3[Analytics Service: Dockerized] -->|Queries| I[Database: PostgreSQL]
    G4[Admin Service: Dockerized] -->|Queries| I[Database: PostgreSQL]
    G6[Frontend Service: Dockerized] -->|Queries| I[Database: PostgreSQL]

    %% Explanation of Flow Diagram
    **Overview**:
    - The diagram represents the LoyalNest App’s architecture, supporting points earning, redemption, referrals, VIP tiers, gamification, analytics, customer imports, campaign discounts, GDPR compliance, referral status, RFM previews, rate limit monitoring, mobile wallet integration, lifecycle rewards, segment benchmarking, A/B testing, churn risk identification, multi-tenant accounts, action replay, and RFM simulation across Phases 1–3 for Shopify Plus merchants (50,000+ customers, 1,000 orders/hour).
    - Aligns with `schema.txt`, `user_stories.md`, `feature_analytics.txt`, and `RFM.txt`.

    **Key Flows**:
    - **Points Earning (US-CW2)**:
      - Customer makes a $100 purchase, triggers Shopify `orders/create` webhook (H1b).
      - Points Service (G1a: /points.v1/EarnPoints, Dockerized) validates HMAC (H1a), fetches `program_settings.config.points_per_dollar` (I7), calculates points (100 * 1 = 100).
      - Inserts into `points_transactions` (I3a, partitioned), updates `customers.points_balance` (I2a, AES-256 encrypted email), caches in Redis (J2: points:{customer_id}).
      - Logs to PostHog (L, `points_earned`, `ui_action:purchase_completed`, 20%+ redemption rate), queues notification via Bull (K) to Klaviyo/Twilio/Postscript (H2a, H3a, H4a) using `email_templates.body` (I14, JSONB, i18next: en, es, fr, ar with RTL).
      - Handles errors (G8a: invalid webhook, G8c: 429 rate limit, G8e: circuit breakers).
    - **Points Redemption (US-CW3)**:
      - Customer selects discount (B2a), widget calls `/points.v1/RedeemReward` (G1b, Dockerized) with OAuth (B0).
      - Points Service checks `rewards` (I5), deducts points from `customers.points_balance` (I2) in TypeORM transaction, inserts into `reward_redemptions` (I6a, I6b: campaign_id, AES-256 encrypted).
      - Creates Shopify discount via Rust/Wasm (G7a), updates Redis (J2: points:{customer_id}), logs to PostHog (L, `points_redeemed`, `ui_action:reward_redeemed`, 15%+ redemption rate).
      - Handles errors (G8a: insufficient points, G8c: 429 rate limit, G8e: circuit breakers).
    - **Referral Rewards (US-CW4, US-CW5, US-BI2)**:
      - Customer shares link (B3a), Referrals Service (G2a: /referrals.v1/CreateReferral, Dockerized) inserts into `referral_links` (I23, I4b: referral_link_id), queues notification via Bull (K, H2a, H3a, H4a).
      - Friend signs up/purchases, Referrals Service (G2b: /referrals.v1/CompleteReferral) inserts into `referrals` (I4a, I4b) and `referral_events` (I25a, event_type='signup'|'purchase'), awards points via `points_transactions` (I3a), updates Redis (J3: referral:{referral_code}), logs to PostHog (L, `referral_completed`, `ui_action:referral_reward_earned`, 7%+ conversion).
      - Customer views detailed status (B8a, B8b) via `/referrals.v1/GetReferralStatus` (G2d), queries `referrals` (I4, I4b) and `referral_events` (I25a), caches in Redis (J11: referral_status:{customer_id}), logs to PostHog (L, `referral_status_viewed`, `ui_action:referral_status_viewed`, 60%+ engagement).
      - Accessibility: ARIA label (`aria-live="polite"`) for status table, RTL for Arabic, Lighthouse CI score 90+.
      - Testing: Jest for `ReferralStatus`, Cypress E2E, k6 for 5,000 concurrent views, OWASP ZAP.
    - **Progressive Tier Engagement (US-CW16)**:
      - Customer views tier progress (B10a, B10b) via `/points.v1/GetVipTierProgress` (G1g), queries `vip_tiers` (I13) and `program_settings.actions` (I7, JSONB), displays in Polaris `ProgressBar` (e.g., “Silver, $100/$500 to Gold”, “Refer 2 friends”).
      - Caches in Redis (J14: tier_progress:{customer_id}), logs to PostHog (L, `tier_progress_viewed`, `ui_action:tier_progress_viewed`, 60%+ engagement).
      - Handles Shopify webhook (`orders/create`, H1b) for real-time updates, supports multi-store sync (Phase 5).
      - Accessibility: ARIA label (`aria-label="View tier progress"`), RTL for Arabic.
      - Testing: Jest for `TierProgress`, Cypress E2E, k6 for 5,000 concurrent views.
    - **Mobile Wallet Integration (US-CW17)**:
      - Customer adds balance to wallet (B11a, B11b) via `/points.v1/GenerateWalletPass` (G1h), generates pass with `points_balance`, `vip_tier_id`, QR code (B11c), stores in `wallet_passes` (I26a, AES-256 encrypted).
      - Integrates with Apple Wallet (H11a) and Google Pay (H12a) APIs, queues via Bull (K), caches in Redis (J15: wallet:{customer_id}).
      - Logs to PostHog (L, `wallet_pass_added`, `ui_action:wallet_added`, 10%+ click-through).
      - Accessibility: ARIA label (`aria-label="Add to wallet"`), RTL for Arabic.
      - Testing: Jest for `WalletIntegration`, Cypress E2E, k6 for 5,000 concurrent requests.
    - **Lifecycle Rewards (US-MD19)**:
      - Merchant configures RFM/tier triggers (D14a) in `bonus_campaigns` (I17a, JSONB: `{"rfm_segment": "At-Risk", "tier_change": "Silver->Gold"}`) via Shopify Flow (H10a).
      - Points Service (G1d: /points.v1/CreateCampaign) triggers rewards, notifies via Klaviyo/Postscript (H2a, H4a, K), logs to PostHog (L, `lifecycle_campaign_triggered`, `ui_action:campaign_triggered`, 15%+ redemption).
      - Accessibility: ARIA label (`aria-label="Configure lifecycle automation"`), RTL for Arabic.
      - Testing: Jest for `LifecycleAutomation`, Cypress E2E, k6 for 5,000 concurrent triggers.
    - **Segment Benchmarking (US-MD20)**:
      - Merchant views comparisons (D15a, D15b) via `/analytics.v1/GetSegmentBenchmarks` (G3g), queries `rfm_benchmarks` (I27a, anonymized), displays in Chart.js bar chart.
      - Caches in Redis (J16: benchmarks:{merchant_id}), logs to PostHog (L, `benchmarks_viewed`, `ui_action:benchmarks_viewed`, 80%+ view rate).
      - Accessibility: ARIA label (`aria-live="Segment benchmark data available"`), RTL for Arabic.
      - Testing: Jest for `SegmentBenchmarking`, Cypress E2E, k6 for 5,000 concurrent views.
    - **A/B Test Nudges (US-MD21)**:
      - Merchant configures variants (D16a) in `program_settings.ab_tests` (I7, JSONB) via `/analytics.v1/ConfigureNudgeABTest` (G3h), tracks in `nudge_events` (I20), displays results (D16b) in Chart.js.
      - Caches in Redis (J17: nudge_ab:{merchant_id}), logs to PostHog (L, `nudge_ab_tested`, `ui_action:nudge_ab_tested`, 10%+ click-through).
      - Accessibility: ARIA label (`aria-label="Configure nudge A/B test"`), RTL for Arabic.
      - Testing: Jest for `NudgeABTest`, Cypress E2E, k6 for 5,000 concurrent interactions.
    - **Churn Risk Customers (US-MD22)**:
      - Merchant views At-Risk list (D17a) via `/analytics.v1/GetChurnRisk` (G3i), queries `rfm_segment_counts` (I24a, `segment='At-Risk'`, `monetary > 2x AOV`), integrates xAI API (H13a) for prediction.
      - Triggers actions via Shopify Flow (H10b), caches in Redis (J18: churn_risk:{merchant_id}), logs to PostHog (L, `churn_risk_viewed`, `ui_action:churn_risk_viewed`, 80%+ view rate).
      - Accessibility: ARIA label (`aria-label="View churn risk customers"`), RTL for Arabic.
      - Testing: Jest for `ChurnRiskDashboard`, Cypress E2E, k6 for 5,000 concurrent views.
    - **Multi-Tenant Accounts (US-AM14)**:
      - Admin links stores (F11a) and assigns RBAC (F11b) in `merchants` (I1, `multi_tenant_group_id`) and `admin_users.metadata` (I10a, AES-256) via `/admin.v1/UpdateMultiTenantConfig` (G4l) and `/auth.v1/UpdateMultiTenantConfig` (G5b).
      - Caches in Redis (J19: multi_tenant:group:{group_id}), logs to PostHog (L, `multi_tenant_updated`, `ui_action:multi_tenant_updated`, 80%+ usage).
      - Accessibility: ARIA label (`aria-label="Manage multi-tenant stores"`), RTL for Arabic.
      - Testing: Jest for `MultiTenantManagement`, Cypress E2E, k6 for 1,000 concurrent updates.
    - **Action Replay (US-AM15)**:
      - Admin replays journey (F12a) or undoes actions (F12b) via `/admin.v1/GetCustomerJourney` (G4k), queries `points_transactions` (I3a), `reward_redemptions` (I6a), `audit_logs` (I12).
      - Caches in Redis (J20: journey:{customer_id}), logs to PostHog (L, `journey_replayed`, `ui_action:journey_replayed`, 90%+ success).
      - Accessibility: ARIA label (`aria-label="Replay customer journey"`), RTL for Arabic.
      - Testing: Jest for `ActionReplay`, Cypress E2E, k6 for 1,000 concurrent replays.
    - **RFM Simulation (US-AM16)**:
      - Admin simulates transitions (F13a, F13b) via `/analytics.v1/SimulateRFMSegments` (G3j), queries `rfm_segment_counts` (I24a), integrates xAI API (H13b), displays in Chart.js.
      - Caches in Redis (J21: rfm_simulation:{merchant_id}), logs to PostHog (L, `rfm_simulation_run`, `ui_action:rfm_simulation_run`, 80%+ usage).
      - Accessibility: ARIA label (`aria-label="Simulate RFM segments"`), RTL for Arabic.
      - Testing: Jest for `RFMSimulation`, Cypress E2E, k6 for 5,000 concurrent simulations.

    **How to Use**:
    - **Render**: Copy Mermaid code into Mermaid Live Editor (https://mermaid.live/) or VS Code with Mermaid plugin. Export as SVG/PNG for documentation.
    - **Documentation**: Save to `docs/flows/system_architecture.mmd`. Include in README.md or presentations for stakeholders.
    - **Development**: Guide implementation of `WebhookController`, Dockerized microservices (G1-G6), and UI components (Vite + React, Polaris, Tailwind CSS).
    - **Testing**: Map to Jest tests for APIs (e.g., `/points.v1/EarnPoints`, `/referrals.v1/GetReferralStatus`, `/points.v1/GenerateWalletPass`), UI components (e.g., GDPR Form UI, WalletIntegration, ChurnRiskDashboard), Lighthouse CI for accessibility (90+ score), k6 for 5,000 concurrent requests, OWASP ZAP for security.
    - **Scalability**: Supports 50,000+ customers with partitioned tables (I3a, I4a, I6a, I11a, I15a, I17a, I25a), Bull queues (K), Redis sorted sets (J6: leaderboard:{merchant_id}:sorted_set), and Redis Streams (J9: rfm:preview:{merchant_id}:stream, J14-J21).
    - **Security**: Implements Shopify OAuth (H1a), RBAC (F0), AES-256 encryption via `pgcrypto` (I1a, I2a, I6a, I10a, I26a).
    - **Multilingualism**: Uses i18next, `Accept-Language` headers, and JSONB fields (`program_settings.config`, `email_templates.body`, `nudges.title`) with `CHECK ?| ARRAY['en', 'es', 'fr', 'ar']` and RTL support.
    - **Error Handling**: Handles 400 (invalid input), 401 (unauthorized), 429 (rate limit) with exponential backoff (G8d) and circuit breakers (G8e).
    - **Analytics**: Integrates PostHog (L) for consistent event tracking (e.g., `points_earned`, `referral_status_viewed`, `wallet_pass_added`, `lifecycle_campaign_triggered`, `churn_risk_viewed`).
```