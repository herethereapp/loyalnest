title,description,labels,milestone,due_date
Configure Nx monorepo and shared libraries,"Set up Nx monorepo with `libs/database` (TypeORM, Mongoose, ioredis, TimescaleDB, Elasticsearch) and `libs/kafka` (producer/consumer for `points.earned`, `referral.completed`). See Phase 1 roadmap.","phase-1,infrastructure,priority-high,type-feature",Phase 1,2025-07-30
Set up docker-compose.yml for all services,"Create `docker-compose.yml` with PostgreSQL, MongoDB, Redis, TimescaleDB, Elasticsearch, Kafka, Zookeeper. Ensure ports (e.g., 5432 for Auth, 27017 for Points). See Phase 1 roadmap.","phase-1,infrastructure,priority-high,type-deployment",Phase 1,2025-07-30
Implement Auth database schema,"Set up PostgreSQL (port 5432) with `merchants`, `admin_users`, `admin_sessions`, `impersonation_sessions`. Use pgcrypto for `admin_users.email`. See Auth service plan.","phase-1,service-auth,priority-high,type-feature",Phase 1,2025-08-02
Develop Auth gRPC endpoints,Implement `/auth.v1/ValidateToken` and `/auth.v1/ValidateMerchant` (gRPC). Produce `merchant.created` Kafka event. See Auth service plan.,"phase-1,service-auth,priority-high,type-feature",Phase 1,2025-08-04
Test Auth service with Jest,Write Jest tests for `AuthRepository` (`findByShopDomain`). Ensure 80% coverage. See Auth service plan.,"phase-1,service-auth,priority-high,type-test",Phase 1,2025-08-05
Implement API Gateway Redis setup,Set up Redis (port 6380) for rate limiting (`rate_limit:{merchant_id}:{endpoint}`). See API Gateway service plan.,"phase-1,service-api-gateway,priority-high,type-feature",Phase 1,2025-08-06
Develop API Gateway webhook routing,"Route Shopify `/webhooks/orders/create` to Points, Referrals. Call `/auth.v1/ValidateToken` (gRPC). Produce `webhook.received` Kafka event (optional). See API Gateway service plan.","phase-1,service-api-gateway,priority-high,type-feature",Phase 1,2025-08-08
Test API Gateway with Jest and k6,"Write Jest tests for `ApiGatewayRepository` (`trackRateLimit`). Run k6 load tests for 10,000 webhooks/hour. See API Gateway service plan.","phase-1,service-api-gateway,priority-high,type-test",Phase 1,2025-08-10
Implement Core database schema,"Set up PostgreSQL (port 5433) with `customers`, `program_settings`, `customer_import_logs`. Define `Customer.entity.ts` with encrypted `email` (pgcrypto). See Core service plan.","phase-2,service-core,priority-medium,type-feature",Phase 2,2025-08-12
Develop Core gRPC endpoints,"Implement `/core.v1/GetCustomerRFM`, `/core.v1/CreateCustomer` (gRPC). Produce `customer.created`, `customer.updated` Kafka events. Consume `rfm.updated`, `gdpr_request.created`. See Core service plan.","phase-2,service-core,priority-medium,type-feature",Phase 2,2025-08-14
Test Core service with Jest and Cypress,"Write Jest tests for `CoreRepository` (`findById`, `updateRFMScore`). Run Cypress tests for gRPC endpoints. Ensure GDPR compliance for `email`. See Core service plan.","phase-2,service-core,priority-medium,type-test,type-compliance",Phase 2,2025-08-15
Implement Points database schema,"Set up MongoDB (port 27017) with `points_transactions`, `reward_redemptions`, `pos_offline_queue`. Define indexes (`customer_id`, `merchant_id`). See Points service plan.","phase-2,service-points,priority-high,type-feature",Phase 2,2025-08-16
Develop Points gRPC endpoints,"Implement `/points.v1/GetPointsBalance` (gRPC). Call `/core.v1/GetCustomerRFM`, `/auth.v1/ValidateMerchant`. Produce `points.earned` Kafka event. See Points service plan.","phase-2,service-points,priority-high,type-feature",Phase 2,2025-08-18
Test Points service with Jest and k6,"Write Jest tests for `PointsRepository` (`createTransaction`). Run k6 load tests for 10,000 transactions/hour. See Points service plan.","phase-2,service-points,priority-high,type-test",Phase 2,2025-08-20
Implement Referrals database schema,"Set up PostgreSQL (port 5434) with `referrals` and Redis (port 6379) for `referral:{merchant_id}:{id}`. Define indexes (`merchant_id`, `referral_link_id`). See Referrals service plan.","phase-2,service-referrals,priority-high,type-feature",Phase 2,2025-08-21
Develop Referrals gRPC endpoints,"Implement `/referrals.v1/GetReferralStatus` (gRPC). Call `/core.v1/GetCustomerRFM`, `/auth.v1/ValidateMerchant`. Produce `referral.completed` Kafka event. See Referrals service plan.","phase-2,service-referrals,priority-high,type-feature",Phase 2,2025-08-23
Test Referrals service with Jest and k6,Write Jest tests for `ReferralsRepository` (`getReferral`). Run k6 load tests for 700 conversions/hour. See Referrals service plan.,"phase-2,service-referrals,priority-high,type-test",Phase 2,2025-08-25
Implement RFM Analytics database schema,"Set up TimescaleDB (port 5435) with `rfm_segment_deltas`, `rfm_segment_counts`, `rfm_score_history`, `customer_segments`. Create hypertable on `created_at`. See RFM Analytics service plan.","phase-2,service-rfm-analytics,priority-high,type-feature",Phase 2,2025-08-27
Develop RFM Analytics gRPC endpoints,"Implement `/rfm.v1/GetSegmentCounts` (gRPC). Call `/core.v1/GetCustomerRFM`. Produce `rfm.updated` Kafka event. Consume `points.earned`, `referral.completed`, `customer.updated`. See RFM Analytics service plan.","phase-2,service-rfm-analytics,priority-high,type-feature",Phase 2,2025-09-01
Test RFM Analytics with Jest and k6,Write Jest tests for `RFMAnalyticsRepository` (`getSegmentCounts`). Run k6 load tests for daily refresh (`0 1 * * *`). See RFM Analytics service plan.,"phase-2,service-rfm-analytics,priority-high,type-test",Phase 2,2025-09-05
Implement AdminCore database schema,"Set up PostgreSQL (port 5436) with `audit_logs`, `gdpr_requests`, `gdpr_redaction_log`, `webhook_idempotency_keys`. Define indexes (`merchant_id`). See AdminCore service plan.","phase-3,service-admin-core,priority-medium,type-feature",Phase 3,2025-09-07
Develop AdminCore gRPC endpoints,"Implement `/admin_core.v1/GetAuditLogs` (gRPC). Produce `gdpr_request.created` Kafka event. Consume `audit_log`, `customer.updated`, `task.completed`. See AdminCore service plan.","phase-3,service-admin-core,priority-medium,type-feature",Phase 3,2025-09-09
Test AdminCore with Jest and Cypress,Write Jest tests for `AdminCoreRepository` (`createAuditLog`). Run Cypress tests for GDPR compliance workflows. See AdminCore service plan.,"phase-3,service-admin-core,priority-medium,type-test,type-compliance",Phase 3,2025-09-10
Implement Event Tracking database schema,"Set up PostgreSQL (port 5439) with `queue_tasks`. Define indexes (`merchant_id`, `status`). See Event Tracking service plan.","phase-3,service-event-tracking,priority-medium,type-feature",Phase 3,2025-09-11
Develop Event Tracking gRPC endpoints,"Implement `/event_tracking.v1/CreateTask` (gRPC). Produce `task.created`, `task.completed` Kafka events. Consume `email_event.created`. See Event Tracking service plan.","phase-3,service-event-tracking,priority-medium,type-feature",Phase 3,2025-09-13
Test Event Tracking with Jest and k6,Write Jest tests for `EventTrackingRepository` (`createTask`). Run k6 load tests for task queue throughput. See Event Tracking service plan.,"phase-3,service-event-tracking,priority-medium,type-test",Phase 3,2025-09-15
Implement Frontend UI,"Develop React UI with gRPC calls to `/points.v1/GetPointsBalance`, `/referrals.v1/GetReferralStatus`, `/rfm.v1/GetSegmentCounts`. Proxy via API Gateway (`/frontend/points`). See Frontend service plan.","phase-3,service-frontend,priority-medium,type-feature",Phase 3,2025-09-20
Test Frontend with Jest and Cypress,Write Jest tests for UI components. Run Cypress tests for dashboard flows. Ensure no PII exposure. See Frontend service plan.,"phase-3,service-frontend,priority-medium,type-test,type-compliance",Phase 3,2025-09-25
Test Frontend with k6,"Run k6 load tests for 5,000 merchant views/hour. See Frontend service plan.","phase-3,service-frontend,priority-medium,type-test",Phase 3,2025-09-30
Implement AdminFeatures database schema,"Set up PostgreSQL (port 5437) with `email_templates`, `email_events`, `shopify_flow_templates`, `integrations`. Encrypt `integrations.credentials`. See AdminFeatures service plan.","phase-4,service-admin-features,priority-low,type-feature",Phase 4,2025-10-03
Develop AdminFeatures gRPC endpoints,Implement `/admin_features.v1/CreateEmailTemplate` (gRPC). Produce `email_event.created` Kafka event. Consume `customer.created`. See AdminFeatures service plan.,"phase-4,service-admin-features,priority-low,type-feature",Phase 4,2025-10-05
Test AdminFeatures with Jest,Write Jest tests for `AdminFeaturesRepository` (`createEmailTemplate`). Ensure `credentials` encryption. See AdminFeatures service plan.,"phase-4,service-admin-features,priority-low,type-test,type-compliance",Phase 4,2025-10-07
Implement Campaign database schema,Set up PostgreSQL (port 5438) with `vip_tiers`. Define indexes (`merchant_id`). See Campaign service plan.,"phase-4,service-campaign,priority-low,type-feature",Phase 4,2025-10-09
Develop Campaign gRPC endpoints,Implement `/campaign.v1/GetVIPTier` (gRPC). Consume `customer.created`. See Campaign service plan.,"phase-4,service-campaign,priority-low,type-feature",Phase 4,2025-10-12
Test Campaign with Jest,Write Jest tests for `CampaignRepository` (`createVIPTier`). See Campaign service plan.,"phase-4,service-campaign,priority-low,type-test",Phase 4,2025-10-14
Set up Gamification Redis,"Configure Redis (port 6381) with `badge:{merchant_id}:{customer_id}`, `leaderboard:{merchant_id}`. Prepare for `/gamification.v1/AwardBadge` (Phase 6). See Gamification service plan.","phase-4,service-gamification,priority-low,type-feature",Phase 4,2025-10-17
Test Gamification with Jest,Write Jest tests for `GamificationRepository` (`awardBadge`). See Gamification service plan.,"phase-4,service-gamification,priority-low,type-test",Phase 4,2025-10-21
Set up Products Elasticsearch,"Configure Elasticsearch (port 9200) with `products` index (`id`, `merchant_id`, `name`). Prepare for `/products.v1/SearchProducts` (Phase 6). See Products service plan.","phase-4,service-products,priority-low,type-feature",Phase 4,2025-10-24
Test Products with Jest,Write Jest tests for `ProductsRepository` (`searchProducts`). See Products service plan.,"phase-4,service-products,priority-low,type-test",Phase 4,2025-10-31
Run integration tests for all services,"Run Cypress E2E tests for all gRPC/REST endpoints (e.g., `/points.v1/GetPointsBalance`). Validate saga patterns (Points → RFM Analytics → Core). See Post-Phase roadmap.","post-phase,all-services,priority-high,type-test",Post-Phase,2025-11-10
Run load tests for high-priority services,"Run k6 load tests for Points, Referrals, API Gateway (10,000 orders/hour). See Post-Phase roadmap.","post-phase,service-points,service-referrals,service-api-gateway,priority-high,type-test",Post-Phase,2025-11-12
Run GDPR/CCPA compliance tests,"Test PII encryption (Core, AdminFeatures) and audit logging (AdminCore). See Post-Phase roadmap.","post-phase,service-core,service-admin-core,service-admin-features,priority-medium,type-compliance",Post-Phase,2025-11-15
Deploy all services to VPS,"Deploy all 13 services via Docker Compose on VPS. Configure CI/CD with GitHub Actions (`nx test`, `nx build`). See Post-Phase roadmap.","post-phase,all-services,priority-high,type-deployment",Post-Phase,2025-11-25
Set up monitoring with Prometheus/Grafana,"Configure Prometheus/Grafana to monitor Kafka lag, DB latency, and service health. See Post-Phase roadmap.","post-phase,infrastructure,priority-medium,type-deployment",Post-Phase,2025-11-30
Conduct beta testing with merchants,"Test with 10 Shopify merchants using free tiers (MongoDB Atlas, Redis Labs). Validate 7% SMS conversion (Referrals) and daily RFM refresh. See Post-Phase roadmap.","post-phase,all-services,priority-high,type-test",Post-Phase,2026-01-15
Finalize documentation for TVP submission,"Update `docs/plans/` with service plans, architecture, and compliance details. See Post-Phase roadmap.","post-phase,documentation,priority-high,type-feature",Post-Phase,2026-02-01
Submit LoyalNest to Shopify App Store,"Submit app with Points, Referrals, RFM Analytics, Frontend for TVP approval. See Post-Phase roadmap.","post-phase,all-services,priority-high,type-deployment",Post-Phase,2026-02-15
