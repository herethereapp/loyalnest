```mermaid
graph TD
    %% Main Sections
    A[Customer] -->|Interacts with| B[Customer Widget]
    C[Merchant] -->|Manages via| D[Merchant Dashboard]
    E[Admin] -->|Manages via| F[Admin Module]
    G[Backend] -->|Supports| B[Customer Widget]
    G[Backend] -->|Supports| D[Merchant Dashboard]
    G[Backend] -->|Supports| F[Admin Module]
    H[Integrations] -->|Connects to| G[Backend]
    I[Database: PostgreSQL] -->|Stores/Retrieves| G[Backend]
    J[Cache: Redis] -->|Optimizes| G[Backend]
    K[Queue: Bull] -->|Handles Async| G[Backend]
    L[Analytics: PostHog] -->|Tracks Events| G[Backend]

    %% Customer Widget (Phase 1, 2, 3)
    subgraph Customer Widget
        B[Customer Widget] --> B0[App Bridge Auth]
        B[Customer Widget] --> B1[Points Balance]
        B[Customer Widget] --> B2[Redemption]
        B[Customer Widget] --> B3[Referral Popup]
        B[Customer Widget] --> B4[RFM Nudges]
        B[Customer Widget] --> B5[VIP Tiers]
        B[Customer Widget] --> B6[Gamification]
        B[Customer Widget] --> B7[Multilingual Support]
        B2[Redemption] --> B2a[Discounts]
        B2[Redemption] --> B2b[Free Shipping]
        B2[Redemption] --> B2c[Free Products]
        B2[Redemption] --> B2d[Coupons]
        B3[Referral Popup] --> B3a[SMS/Email Referral]
        B3[Referral Popup] --> B3b[Social Sharing]
        B4[RFM Nudges] --> B4a[Banner/Popup]
        B4[RFM Nudges] --> B4b[Dismiss Action]
        B5[VIP Tiers] --> B5a[Tier Status]
        B5[VIP Tiers] --> B5b[Perks Display]
        B6[Gamification] --> B6a[Badges]
        B6[Gamification] --> B6b[Leaderboards]
        B7[Multilingual Support] --> B7a[Language Selector]
        B7[Multilingual Support] --> B7b[JSONB Content]
    end

    %% Merchant Dashboard (Phase 1, 2, 3)
    subgraph Merchant Dashboard
        D[Merchant Dashboard] --> D0[App Bridge Auth]
        D[Merchant Dashboard] --> D1[Welcome Page]
        D[Merchant Dashboard] --> D2[Points Program]
        D[Merchant Dashboard] --> D3[Referrals Program]
        D[Merchant Dashboard] --> D4[Customers]
        D[Merchant Dashboard] --> D5[Analytics]
        D[Merchant Dashboard] --> D6[Settings]
        D[Merchant Dashboard] --> D7[On-Site Content]
        D[Merchant Dashboard] --> D8[VIP Tiers]
        D[Merchant Dashboard] --> D9[Activity Logs]
        D[Merchant Dashboard] --> D10[Bonus Campaigns]
        D1[Welcome Page] --> D1a[Setup Tasks]
        D1[Welcome Page] --> D1b[Congratulatory Messages]
        D2[Points Program] --> D2a[Earn: Purchases, Signups]
        D2[Points Program] --> D2b[Redeem: Discounts, Shipping]
        D2[Points Program] --> D2c[Branding: Rewards Panel]
        D2[Points Program] --> D2d[Status: Enable/Disable]
        D3[Referrals Program] --> D3a[SMS/Email Config]
        D3[Referrals Program] --> D3b[Social Sharing Config]
        D3[Referrals Program] --> D3c[Status Toggle]
        D4[Customers] --> D4a[List: Name, Email, Points]
        D4[Customers] --> D4b[Search: Name/Email]
        D5[Analytics] --> D5a[Metrics: Members, Points]
        D5[Analytics] --> D5b[RFM Chart]
        D5[Analytics] --> D5c[Advanced Reports]
        D5[Analytics] --> D5d[CSV Export]
        D6[Settings] --> D6a[Store Details, Billing]
        D6[Settings] --> D6b[Branding]
        D6[Settings] --> D6c[RFM Config]
        D6[Settings] --> D6d[Developer Toolkit]
        D6[Settings] --> D6e[Language Config]
        D7[On-Site Content] --> D7a[Loyalty Page]
        D7[On-Site Content] --> D7b[Rewards Panel]
        D7[On-Site Content] --> D7c[Launcher Button]
        D7[On-Site Content] --> D7d[Points Display]
        D7[On-Site Content] --> D7e[Post-Purchase Widget]
        D7[On-Site Content] --> D7f[Checkout Extensions]
        D7[On-Site Content] --> D7g[Sticky Bar]
        D8[VIP Tiers] --> D8a[Thresholds: Spending]
        D8[VIP Tiers] --> D8b[Perks: Early Access]
        D9[Activity Logs] --> D9a[Points, Referrals, VIP]
        D10[Bonus Campaigns] --> D10a[Promotions]
        D10[Bonus Campaigns] --> D10b[Goal Spend]
    end

    %% Admin Module (Phase 1, 2, 3)
    subgraph Admin Module
        F[Admin Module] --> F0[RBAC Auth]
        F[Admin Module] --> F1[Overview]
        F[Admin Module] --> F2[Merchants]
        F[Admin Module] --> F3[Admin Users]
        F[Admin Module] --> F4[Logs]
        F[Admin Module] --> F5[Plan Management]
        F[Admin Module] --> F6[Integration Health]
        F[Admin Module] --> F7[RFM Config Management]
        F[Admin Module] --> F8[RFM Segment Export]
        F[Admin Module] --> F9[GDPR Requests]
        F1[Overview] --> F1a[Merchant Count, Points]
        F2[Merchants] --> F2a[List: ID, Domain, Plan]
        F2[Merchants] --> F2b[Adjust Points]
        F2[Merchants] --> F2c[Suspend/Reactivate]
        F3[Admin Users] --> F3a[Add/Edit/Delete Admins]
        F4[Logs] --> F4a[API Logs, Audit Logs]
        F9[GDPR Requests] --> F9a[Data Request]
        F9[GDPR Requests] --> F9b[Data Redaction]
    end

    %% Integrations (Phase 1, 2, 3)
    subgraph Integrations
        H[Integrations] --> H1[Shopify]
        H[Integrations] --> H2[Twilio]
        H[Integrations] --> H3[SendGrid]
        H[Integrations] --> H4[Mailchimp]
        H[Integrations] --> H5[Yotpo]
        H[Integrations] --> H6[Square]
        H[Integrations] --> H7[Lightspeed]
        H[Integrations] --> H8[Gorgias]
        H[Integrations] --> H9[Postscript]
        H[Integrations] --> H10[Shopify Flow]
        H1[Shopify] --> H1a[OAuth]
        H1[Shopify] --> H1b[Orders/Create Webhook]
        H1[Shopify] --> H1c[Orders/Cancelled Webhook]
        H1[Shopify] --> H1d[GDPR Webhooks]
        H1[Shopify] --> H1e[POS Points]
        H1d[GDPR Webhooks] --> H1d1[customers/data_request]
        H1d[GDPR Webhooks] --> H1d2[customers/redact]
    end

    %% Database (Phase 1, 2, 3)
    subgraph Database: PostgreSQL
        I[Database] --> I1[merchants]
        I[Database] --> I2[customers]
        I[Database] --> I3[points_transactions]
        I[Database] --> I4[referrals]
        I[Database] --> I5[rewards]
        I[Database] --> I6[reward_redemptions]
        I[Database] --> I7[program_settings]
        I[Database] --> I8[shopify_sessions]
        I[Database] --> I9[customer_segments]
        I[Database] --> I10[admin_users]
        I[Database] --> I11[api_logs]
        I[Database] --> I12[audit_logs]
        I[Database] --> I13[vip_tiers]
        I[Database] --> I14[email_templates]
        I[Database] --> I15[email_events]
        I[Database] --> I16[integrations]
        I[Database] --> I17[bonus_campaigns]
        I[Database] --> I18[gamification_achievements]
        I[Database] --> I19[nudges]
        I[Database] --> I20[nudge_events]
        I[Database] --> I21[gdpr_requests]
        I[Database] --> I22[import_logs]
        I1[merchants] --> I1a[Encrypted api_token]
        I2[customers] --> I2a[Encrypted email]
        I3[points_transactions] --> I3a[Partitioned]
        I11[api_logs] --> I11a[Partitioned]
    end

    %% Backend (Phase 1, 2, 3)
    subgraph Backend
        G[Backend] --> G1[NestJS APIs]
        G[Backend] --> G2[Rust/Wasm Shopify Functions]
        G1[NestJS APIs] --> G1a[Points APIs]
        G1[NestJS APIs] --> G1b[Referral APIs]
        G1[NestJS APIs] --> G1c[Analytics APIs]
        G1[NestJS APIs] --> G1d[Data Import APIs]
        G1[NestJS APIs] --> G1e[Admin APIs]
        G1[NestJS APIs] --> G1f[VIP Tiers APIs]
        G1[NestJS APIs] --> G1g[RFM Config APIs]
        G1[NestJS APIs] --> G1h[Activity APIs]
        G1[NestJS APIs] --> G1i[Campaign APIs]
        G1[NestJS APIs] --> G1j[Gamification APIs]
        G1[NestJS APIs] --> G1k[Nudges APIs]
        G1[NestJS APIs] --> G1l[GDPR APIs]
        G2[Rust/Wasm Shopify Functions] --> G2a[Discounts]
        G2[Rust/Wasm Shopify Functions] --> G2b[RFM Updates]
        G2[Rust/Wasm Shopify Functions] --> G2c[VIP Multipliers]
        G2[Rust/Wasm Shopify Functions] --> G2d[Campaign Discounts]
        G1[NestJS APIs] --> G1m[Error Handling]
        G1m[Error Handling] --> G1m1[400 Invalid]
        G1m[Error Handling] --> G1m2[429 Rate Limit]
    end

    %% Data Flow
    A[Customer] -->|Earns/Redeems| I3[points_transactions]
    A[Customer] -->|Refers| I4[referrals]
    A[Customer] -->|Triggers| I20[nudge_events]
    A[Customer] -->|Views| I13[vip_tiers]
    A[Customer] -->|Earns| I18[gamification_achievements]
    B[Customer Widget] -->|Fetches/Saves| J[Cache: Redis]
    B[Customer Widget] -->|Authenticates| H1a[OAuth]
    B0[App Bridge Auth] -->|Secures| G1[NestJS APIs]
    J[Cache: Redis] -->|Caches| G[Backend]
    K[Queue: Bull] -->|Processes| H2[Twilio]
    K[Queue: Bull] -->|Processes| H3[SendGrid]
    G[Backend] -->|Queries| I[Database]
    G[Backend] -->|Logs Events| L[Analytics: PostHog]
    D[Merchant Dashboard] -->|Configures| I7[program_settings]
    D[Merchant Dashboard] -->|Views| I9[customer_segments]
    D[Merchant Dashboard] -->|Authenticates| H1a[OAuth]
    D0[App Bridge Auth] -->|Secures| G1[NestJS APIs]
    F[Admin Module] -->|Manages| I1[merchants]
    F[Admin Module] -->|Views| I11[api_logs]
    F[Admin Module] -->|Views| I12[audit_logs]
    F[Admin Module] -->|Processes| I21[gdpr_requests]
    F0[RBAC Auth] -->|Secures| G1e[Admin APIs]
    H[Integrations] -->|Sends Data| G[Backend]
    I2[customers] -->|Stores RFM| I9[customer_segments]
    I13[vip_tiers] -->|Stores VIP Data| I2[customers]
    I7[program_settings] -->|Stores RFM Thresholds| D6c[RFM Config]
    I7[program_settings] -->|Stores Language| D6e[Language Config]
    I14[email_templates] -->|Provides| B7b[JSONB Content]

    %% Explanation of Flow Diagram
    **Overview**:
    - The diagram represents the Herethere Loyalty App's architecture, focusing on points earning, redemption, referrals, VIP tiers, gamification, analytics, and integrations.
    - It aligns with `schema.sql`, `user stories.md`, and `Sequence Diagrams.txt`, covering Phases 1â€“3 for small, medium, and Shopify Plus merchants.

    **Key Flows**:
    - **Points Earning**:
      - Customer makes a $100 purchase, triggering Shopify `orders/create` webhook (H1b).
      - Backend (G1a) validates HMAC (H1a), fetches `program_settings.config.points_per_dollar` (I7), calculates points (100 * 10 = 1000).
      - Inserts into `points_transactions` (I3a, partitioned), updates `customers.points_balance` (I2a, encrypted email), caches in Redis (J).
      - Logs to PostHog (L, `points_earned`).
      - Queues notification via Bull (K) to Twilio/SendGrid (H2, H3) using `email_templates.body` (I14, JSONB, `Accept-Language`).
      - Handles errors (G1m1: 400 invalid webhook, G1m2: 429 rate limit).
    - **Points Redemption**:
      - Customer selects discount (B2a), widget calls `POST /api/redeem` (G1a) with OAuth (B0).
      - Backend checks `rewards` (I5), deducts points from `customers.points_balance` (I2), inserts into `reward_redemptions` (I6).
      - Creates Shopify discount (H1), updates Redis (J), logs to PostHog (L, `points_redeemed`).
    - **Referral Rewards**:
      - Customer shares link (B3a), backend inserts into `referral_links` (I4), queues SMS/email (K, H2, H3).
      - Friend signs up, backend inserts into `referrals` (I4), awards points via `points_transactions` (I3), logs to PostHog (L, `referral_completed`).
    - **Order Cancellation**:
      - Shopify `orders/cancelled` webhook (H1c) triggers `POST /api/points/adjust` (G1a).
      - Deducts points from `points_transactions` (I3a), updates `customers.points_balance` (I2), caches in Redis (J).
      - Logs to PostHog (L, `points_adjusted`).
    - **GDPR Compliance**:
      - Shopify `customers/data_request` (H1d1) inserts into `gdpr_requests` (I21), sends data via SendGrid (H3, K).
      - Logs to PostHog (L, `gdpr_request`).
    - **RFM Updates**:
      - Scheduled job (G2b) updates `customers.rfm_score` (I2) and `customer_segments` (I9), logs to PostHog (L, `rfm_updated`).
    - **Nudges**:
      - Widget displays nudge (B4a) from `nudges` (I19, JSONB), logs interaction in `nudge_events` (I20), notifies via SendGrid (H3, K).

    **How to Use**:
    - **Render**: Copy Mermaid code into Mermaid Live Editor (https://mermaid.live/) or VS Code with Mermaid plugin. Export as SVG/PNG for documentation.
    - **Documentation**: Save to `docs/flows/system_architecture.mmd`. Include in README.md or presentations for stakeholders.
    - **Development**: Guide implementation of `WebhookController`, `PointsService`, and UI components (Vite + React, Polaris, Tailwind CSS).
    - **Testing**: Map to Jest tests for APIs (e.g., `POST /api/points/earn`) and UI components.

    **Additional Notes**:
    - **Scalability**: Uses partitioned tables (I3a, I11a), Bull queues (K) for notifications, and Redis (J) for caching.
    - **Security**: Implements Shopify OAuth (H1a), RBAC (F0), and `pgcrypto` for encryption (I1a, I2a).
    - **Multilingualism**: Supports `Accept-Language` headers, JSONB fields (`program_settings.config`, `email_templates.body`, `nudges.title`).
    - **Error Handling**: Includes nodes for 400/429 errors (G1m) and TypeORM transaction rollbacks.
    - **Analytics**: Integrates PostHog (L) for event tracking (e.g., `points_earned`, `analytics_viewed`).
```